// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module multiplier_multiplier_Pipeline_VITIS_LOOP_31_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RFIFONUM,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        localA_7_load_7,
        localA_7_load_6,
        localA_7_load_5,
        localA_7_load_4,
        localA_7_load_3,
        localA_7_load_2,
        localA_7_load_1,
        localA_7_load,
        localA_load_7,
        localA_load_6,
        localA_load_5,
        localA_load_4,
        localA_load_3,
        localA_load_2,
        localA_load_1,
        localA_load,
        localA_1_load_7,
        localA_1_load_6,
        localA_1_load_5,
        localA_1_load_4,
        localA_1_load_3,
        localA_1_load_2,
        localA_1_load_1,
        localA_1_load,
        localA_2_load_7,
        localA_2_load_6,
        localA_2_load_5,
        localA_2_load_4,
        localA_2_load_3,
        localA_2_load_2,
        localA_2_load_1,
        localA_2_load,
        localA_3_load_7,
        localA_3_load_6,
        localA_3_load_5,
        localA_3_load_4,
        localA_3_load_3,
        localA_3_load_2,
        localA_3_load_1,
        localA_3_load,
        localA_4_load_7,
        localA_4_load_6,
        localA_4_load_5,
        localA_4_load_4,
        localA_4_load_3,
        localA_4_load_2,
        localA_4_load_1,
        localA_4_load,
        localA_5_load_7,
        localA_5_load_6,
        localA_5_load_5,
        localA_5_load_4,
        localA_5_load_3,
        localA_5_load_2,
        localA_5_load_1,
        localA_5_load,
        localA_6_load_7,
        localA_6_load_6,
        localA_6_load_5,
        localA_6_load_4,
        localA_6_load_3,
        localA_6_load_2,
        localA_6_load_1,
        localA_6_load,
        sext_ln31_1,
        sext_ln31,
        localB_7_address0,
        localB_7_ce0,
        localB_7_we0,
        localB_7_d0,
        localB_address0,
        localB_ce0,
        localB_we0,
        localB_d0,
        localB_1_address0,
        localB_1_ce0,
        localB_1_we0,
        localB_1_d0,
        localB_2_address0,
        localB_2_ce0,
        localB_2_we0,
        localB_2_d0,
        localB_3_address0,
        localB_3_ce0,
        localB_3_we0,
        localB_3_d0,
        localB_4_address0,
        localB_4_ce0,
        localB_4_we0,
        localB_4_d0,
        localB_5_address0,
        localB_5_ce0,
        localB_5_we0,
        localB_5_d0,
        localB_6_address0,
        localB_6_ce0,
        localB_6_we0,
        localB_6_d0,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld,
        p_out2,
        p_out2_ap_vld,
        p_out3,
        p_out3_ap_vld,
        p_out4,
        p_out4_ap_vld,
        p_out5,
        p_out5_ap_vld,
        p_out6,
        p_out6_ap_vld,
        p_out7,
        p_out7_ap_vld,
        p_out8,
        p_out8_ap_vld,
        p_out9,
        p_out9_ap_vld,
        p_out10,
        p_out10_ap_vld,
        p_out11,
        p_out11_ap_vld,
        p_out12,
        p_out12_ap_vld,
        p_out13,
        p_out13_ap_vld,
        p_out14,
        p_out14_ap_vld,
        p_out15,
        p_out15_ap_vld,
        p_out16,
        p_out16_ap_vld,
        p_out17,
        p_out17_ap_vld,
        p_out18,
        p_out18_ap_vld,
        p_out19,
        p_out19_ap_vld,
        p_out20,
        p_out20_ap_vld,
        p_out21,
        p_out21_ap_vld,
        p_out22,
        p_out22_ap_vld,
        p_out23,
        p_out23_ap_vld,
        p_out24,
        p_out24_ap_vld,
        p_out25,
        p_out25_ap_vld,
        p_out26,
        p_out26_ap_vld,
        p_out27,
        p_out27_ap_vld,
        p_out28,
        p_out28_ap_vld,
        p_out29,
        p_out29_ap_vld,
        p_out30,
        p_out30_ap_vld,
        p_out31,
        p_out31_ap_vld,
        p_out32,
        p_out32_ap_vld,
        p_out33,
        p_out33_ap_vld,
        p_out34,
        p_out34_ap_vld,
        p_out35,
        p_out35_ap_vld,
        p_out36,
        p_out36_ap_vld,
        p_out37,
        p_out37_ap_vld,
        p_out38,
        p_out38_ap_vld,
        p_out39,
        p_out39_ap_vld,
        p_out40,
        p_out40_ap_vld,
        p_out41,
        p_out41_ap_vld,
        p_out42,
        p_out42_ap_vld,
        p_out43,
        p_out43_ap_vld,
        p_out44,
        p_out44_ap_vld,
        p_out45,
        p_out45_ap_vld,
        p_out46,
        p_out46_ap_vld,
        p_out47,
        p_out47_ap_vld,
        p_out48,
        p_out48_ap_vld,
        p_out49,
        p_out49_ap_vld,
        p_out50,
        p_out50_ap_vld,
        p_out51,
        p_out51_ap_vld,
        p_out52,
        p_out52_ap_vld,
        p_out53,
        p_out53_ap_vld,
        p_out54,
        p_out54_ap_vld,
        p_out55,
        p_out55_ap_vld,
        p_out56,
        p_out56_ap_vld,
        p_out57,
        p_out57_ap_vld,
        p_out58,
        p_out58_ap_vld,
        p_out59,
        p_out59_ap_vld,
        p_out60,
        p_out60_ap_vld,
        p_out61,
        p_out61_ap_vld,
        p_out62,
        p_out62_ap_vld,
        p_out63,
        p_out63_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [511:0] m_axi_gmem1_WDATA;
output  [63:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [511:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [63:0] m_axi_gmem2_AWADDR;
output  [0:0] m_axi_gmem2_AWID;
output  [31:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [0:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [511:0] m_axi_gmem2_WDATA;
output  [63:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [0:0] m_axi_gmem2_WID;
output  [0:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [63:0] m_axi_gmem2_ARADDR;
output  [0:0] m_axi_gmem2_ARID;
output  [31:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [0:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [511:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [0:0] m_axi_gmem2_RID;
input  [8:0] m_axi_gmem2_RFIFONUM;
input  [0:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [0:0] m_axi_gmem2_BID;
input  [0:0] m_axi_gmem2_BUSER;
input  [31:0] localA_7_load_7;
input  [31:0] localA_7_load_6;
input  [31:0] localA_7_load_5;
input  [31:0] localA_7_load_4;
input  [31:0] localA_7_load_3;
input  [31:0] localA_7_load_2;
input  [31:0] localA_7_load_1;
input  [31:0] localA_7_load;
input  [31:0] localA_load_7;
input  [31:0] localA_load_6;
input  [31:0] localA_load_5;
input  [31:0] localA_load_4;
input  [31:0] localA_load_3;
input  [31:0] localA_load_2;
input  [31:0] localA_load_1;
input  [31:0] localA_load;
input  [31:0] localA_1_load_7;
input  [31:0] localA_1_load_6;
input  [31:0] localA_1_load_5;
input  [31:0] localA_1_load_4;
input  [31:0] localA_1_load_3;
input  [31:0] localA_1_load_2;
input  [31:0] localA_1_load_1;
input  [31:0] localA_1_load;
input  [31:0] localA_2_load_7;
input  [31:0] localA_2_load_6;
input  [31:0] localA_2_load_5;
input  [31:0] localA_2_load_4;
input  [31:0] localA_2_load_3;
input  [31:0] localA_2_load_2;
input  [31:0] localA_2_load_1;
input  [31:0] localA_2_load;
input  [31:0] localA_3_load_7;
input  [31:0] localA_3_load_6;
input  [31:0] localA_3_load_5;
input  [31:0] localA_3_load_4;
input  [31:0] localA_3_load_3;
input  [31:0] localA_3_load_2;
input  [31:0] localA_3_load_1;
input  [31:0] localA_3_load;
input  [31:0] localA_4_load_7;
input  [31:0] localA_4_load_6;
input  [31:0] localA_4_load_5;
input  [31:0] localA_4_load_4;
input  [31:0] localA_4_load_3;
input  [31:0] localA_4_load_2;
input  [31:0] localA_4_load_1;
input  [31:0] localA_4_load;
input  [31:0] localA_5_load_7;
input  [31:0] localA_5_load_6;
input  [31:0] localA_5_load_5;
input  [31:0] localA_5_load_4;
input  [31:0] localA_5_load_3;
input  [31:0] localA_5_load_2;
input  [31:0] localA_5_load_1;
input  [31:0] localA_5_load;
input  [31:0] localA_6_load_7;
input  [31:0] localA_6_load_6;
input  [31:0] localA_6_load_5;
input  [31:0] localA_6_load_4;
input  [31:0] localA_6_load_3;
input  [31:0] localA_6_load_2;
input  [31:0] localA_6_load_1;
input  [31:0] localA_6_load;
input  [57:0] sext_ln31_1;
input  [57:0] sext_ln31;
output  [2:0] localB_7_address0;
output   localB_7_ce0;
output   localB_7_we0;
output  [31:0] localB_7_d0;
output  [2:0] localB_address0;
output   localB_ce0;
output   localB_we0;
output  [31:0] localB_d0;
output  [2:0] localB_1_address0;
output   localB_1_ce0;
output   localB_1_we0;
output  [31:0] localB_1_d0;
output  [2:0] localB_2_address0;
output   localB_2_ce0;
output   localB_2_we0;
output  [31:0] localB_2_d0;
output  [2:0] localB_3_address0;
output   localB_3_ce0;
output   localB_3_we0;
output  [31:0] localB_3_d0;
output  [2:0] localB_4_address0;
output   localB_4_ce0;
output   localB_4_we0;
output  [31:0] localB_4_d0;
output  [2:0] localB_5_address0;
output   localB_5_ce0;
output   localB_5_we0;
output  [31:0] localB_5_d0;
output  [2:0] localB_6_address0;
output   localB_6_ce0;
output   localB_6_we0;
output  [31:0] localB_6_d0;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] p_out1;
output   p_out1_ap_vld;
output  [31:0] p_out2;
output   p_out2_ap_vld;
output  [31:0] p_out3;
output   p_out3_ap_vld;
output  [31:0] p_out4;
output   p_out4_ap_vld;
output  [31:0] p_out5;
output   p_out5_ap_vld;
output  [31:0] p_out6;
output   p_out6_ap_vld;
output  [31:0] p_out7;
output   p_out7_ap_vld;
output  [31:0] p_out8;
output   p_out8_ap_vld;
output  [31:0] p_out9;
output   p_out9_ap_vld;
output  [31:0] p_out10;
output   p_out10_ap_vld;
output  [31:0] p_out11;
output   p_out11_ap_vld;
output  [31:0] p_out12;
output   p_out12_ap_vld;
output  [31:0] p_out13;
output   p_out13_ap_vld;
output  [31:0] p_out14;
output   p_out14_ap_vld;
output  [31:0] p_out15;
output   p_out15_ap_vld;
output  [31:0] p_out16;
output   p_out16_ap_vld;
output  [31:0] p_out17;
output   p_out17_ap_vld;
output  [31:0] p_out18;
output   p_out18_ap_vld;
output  [31:0] p_out19;
output   p_out19_ap_vld;
output  [31:0] p_out20;
output   p_out20_ap_vld;
output  [31:0] p_out21;
output   p_out21_ap_vld;
output  [31:0] p_out22;
output   p_out22_ap_vld;
output  [31:0] p_out23;
output   p_out23_ap_vld;
output  [31:0] p_out24;
output   p_out24_ap_vld;
output  [31:0] p_out25;
output   p_out25_ap_vld;
output  [31:0] p_out26;
output   p_out26_ap_vld;
output  [31:0] p_out27;
output   p_out27_ap_vld;
output  [31:0] p_out28;
output   p_out28_ap_vld;
output  [31:0] p_out29;
output   p_out29_ap_vld;
output  [31:0] p_out30;
output   p_out30_ap_vld;
output  [31:0] p_out31;
output   p_out31_ap_vld;
output  [31:0] p_out32;
output   p_out32_ap_vld;
output  [31:0] p_out33;
output   p_out33_ap_vld;
output  [31:0] p_out34;
output   p_out34_ap_vld;
output  [31:0] p_out35;
output   p_out35_ap_vld;
output  [31:0] p_out36;
output   p_out36_ap_vld;
output  [31:0] p_out37;
output   p_out37_ap_vld;
output  [31:0] p_out38;
output   p_out38_ap_vld;
output  [31:0] p_out39;
output   p_out39_ap_vld;
output  [31:0] p_out40;
output   p_out40_ap_vld;
output  [31:0] p_out41;
output   p_out41_ap_vld;
output  [31:0] p_out42;
output   p_out42_ap_vld;
output  [31:0] p_out43;
output   p_out43_ap_vld;
output  [31:0] p_out44;
output   p_out44_ap_vld;
output  [31:0] p_out45;
output   p_out45_ap_vld;
output  [31:0] p_out46;
output   p_out46_ap_vld;
output  [31:0] p_out47;
output   p_out47_ap_vld;
output  [31:0] p_out48;
output   p_out48_ap_vld;
output  [31:0] p_out49;
output   p_out49_ap_vld;
output  [31:0] p_out50;
output   p_out50_ap_vld;
output  [31:0] p_out51;
output   p_out51_ap_vld;
output  [31:0] p_out52;
output   p_out52_ap_vld;
output  [31:0] p_out53;
output   p_out53_ap_vld;
output  [31:0] p_out54;
output   p_out54_ap_vld;
output  [31:0] p_out55;
output   p_out55_ap_vld;
output  [31:0] p_out56;
output   p_out56_ap_vld;
output  [31:0] p_out57;
output   p_out57_ap_vld;
output  [31:0] p_out58;
output   p_out58_ap_vld;
output  [31:0] p_out59;
output   p_out59_ap_vld;
output  [31:0] p_out60;
output   p_out60_ap_vld;
output  [31:0] p_out61;
output   p_out61_ap_vld;
output  [31:0] p_out62;
output   p_out62_ap_vld;
output  [31:0] p_out63;
output   p_out63_ap_vld;

reg ap_idle;
reg m_axi_gmem1_RREADY;
reg m_axi_gmem2_RREADY;
reg localB_7_ce0;
reg localB_7_we0;
reg localB_ce0;
reg localB_we0;
reg localB_1_ce0;
reg localB_1_we0;
reg localB_2_ce0;
reg localB_2_we0;
reg localB_3_ce0;
reg localB_3_we0;
reg localB_4_ce0;
reg localB_4_we0;
reg localB_5_ce0;
reg localB_5_we0;
reg localB_6_ce0;
reg localB_6_we0;
reg p_out_ap_vld;
reg p_out1_ap_vld;
reg p_out2_ap_vld;
reg p_out3_ap_vld;
reg p_out4_ap_vld;
reg p_out5_ap_vld;
reg p_out6_ap_vld;
reg p_out7_ap_vld;
reg p_out8_ap_vld;
reg p_out9_ap_vld;
reg p_out10_ap_vld;
reg p_out11_ap_vld;
reg p_out12_ap_vld;
reg p_out13_ap_vld;
reg p_out14_ap_vld;
reg p_out15_ap_vld;
reg p_out16_ap_vld;
reg p_out17_ap_vld;
reg p_out18_ap_vld;
reg p_out19_ap_vld;
reg p_out20_ap_vld;
reg p_out21_ap_vld;
reg p_out22_ap_vld;
reg p_out23_ap_vld;
reg p_out24_ap_vld;
reg p_out25_ap_vld;
reg p_out26_ap_vld;
reg p_out27_ap_vld;
reg p_out28_ap_vld;
reg p_out29_ap_vld;
reg p_out30_ap_vld;
reg p_out31_ap_vld;
reg p_out32_ap_vld;
reg p_out33_ap_vld;
reg p_out34_ap_vld;
reg p_out35_ap_vld;
reg p_out36_ap_vld;
reg p_out37_ap_vld;
reg p_out38_ap_vld;
reg p_out39_ap_vld;
reg p_out40_ap_vld;
reg p_out41_ap_vld;
reg p_out42_ap_vld;
reg p_out43_ap_vld;
reg p_out44_ap_vld;
reg p_out45_ap_vld;
reg p_out46_ap_vld;
reg p_out47_ap_vld;
reg p_out48_ap_vld;
reg p_out49_ap_vld;
reg p_out50_ap_vld;
reg p_out51_ap_vld;
reg p_out52_ap_vld;
reg p_out53_ap_vld;
reg p_out54_ap_vld;
reg p_out55_ap_vld;
reg p_out56_ap_vld;
reg p_out57_ap_vld;
reg p_out58_ap_vld;
reg p_out59_ap_vld;
reg p_out60_ap_vld;
reg p_out61_ap_vld;
reg p_out62_ap_vld;
reg p_out63_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln31_reg_4128;
reg   [0:0] empty_97_reg_4132;
reg    ap_predicate_op223_read_state2;
reg    ap_predicate_op224_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln31_fu_1972_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem2_blk_n_R;
wire    ap_block_pp0_stage0;
reg    gmem1_blk_n_R;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_4122;
reg   [3:0] i_1_reg_4122_pp0_iter1_reg;
reg   [0:0] icmp_ln31_reg_4128_pp0_iter1_reg;
wire   [0:0] empty_97_fu_1984_p1;
reg   [0:0] empty_97_reg_4132_pp0_iter1_reg;
reg   [511:0] gmem1_addr_read_reg_4136;
reg   [511:0] gmem2_addr_read_reg_4141;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [511:0] ap_phi_mux_empty_96_phi_fu_1611_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_96_reg_1608;
wire   [511:0] shiftreg2940_cast_fu_2016_p1;
reg   [511:0] ap_phi_mux_empty_95_phi_fu_1620_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_95_reg_1617;
wire   [511:0] shiftreg2942_cast_fu_2011_p1;
wire   [63:0] i_cast295_fu_2021_p1;
reg   [255:0] shiftreg2942_fu_382;
wire    ap_loop_init;
reg   [255:0] shiftreg2940_fu_386;
reg   [3:0] i_fu_390;
wire   [3:0] add_ln31_fu_1978_p2;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [31:0] empty_fu_394;
wire   [31:0] select_ln36_63_fu_2985_p3;
reg   [31:0] empty_31_fu_398;
wire   [31:0] select_ln36_62_fu_2977_p3;
reg   [31:0] empty_32_fu_402;
wire   [31:0] select_ln36_61_fu_2969_p3;
reg   [31:0] empty_33_fu_406;
wire   [31:0] select_ln36_60_fu_2961_p3;
reg   [31:0] empty_34_fu_410;
wire   [31:0] select_ln36_59_fu_2953_p3;
reg   [31:0] empty_35_fu_414;
wire   [31:0] select_ln36_58_fu_2945_p3;
reg   [31:0] empty_36_fu_418;
wire   [31:0] select_ln36_57_fu_2937_p3;
reg   [31:0] empty_37_fu_422;
wire   [31:0] select_ln36_56_fu_2929_p3;
reg   [31:0] empty_38_fu_426;
wire   [31:0] select_ln36_55_fu_2921_p3;
reg   [31:0] empty_39_fu_430;
wire   [31:0] select_ln36_54_fu_2913_p3;
reg   [31:0] empty_40_fu_434;
wire   [31:0] select_ln36_53_fu_2905_p3;
reg   [31:0] empty_41_fu_438;
wire   [31:0] select_ln36_52_fu_2897_p3;
reg   [31:0] empty_42_fu_442;
wire   [31:0] select_ln36_51_fu_2889_p3;
reg   [31:0] empty_43_fu_446;
wire   [31:0] select_ln36_50_fu_2881_p3;
reg   [31:0] empty_44_fu_450;
wire   [31:0] select_ln36_49_fu_2873_p3;
reg   [31:0] empty_45_fu_454;
wire   [31:0] select_ln36_48_fu_2865_p3;
reg   [31:0] empty_46_fu_458;
wire   [31:0] select_ln36_47_fu_2857_p3;
reg   [31:0] empty_47_fu_462;
wire   [31:0] select_ln36_46_fu_2849_p3;
reg   [31:0] empty_48_fu_466;
wire   [31:0] select_ln36_45_fu_2841_p3;
reg   [31:0] empty_49_fu_470;
wire   [31:0] select_ln36_44_fu_2833_p3;
reg   [31:0] empty_50_fu_474;
wire   [31:0] select_ln36_43_fu_2825_p3;
reg   [31:0] empty_51_fu_478;
wire   [31:0] select_ln36_42_fu_2817_p3;
reg   [31:0] empty_52_fu_482;
wire   [31:0] select_ln36_41_fu_2809_p3;
reg   [31:0] empty_53_fu_486;
wire   [31:0] select_ln36_40_fu_2801_p3;
reg   [31:0] empty_54_fu_490;
wire   [31:0] select_ln36_39_fu_2793_p3;
reg   [31:0] empty_55_fu_494;
wire   [31:0] select_ln36_38_fu_2785_p3;
reg   [31:0] empty_56_fu_498;
wire   [31:0] select_ln36_37_fu_2777_p3;
reg   [31:0] empty_57_fu_502;
wire   [31:0] select_ln36_36_fu_2769_p3;
reg   [31:0] empty_58_fu_506;
wire   [31:0] select_ln36_35_fu_2761_p3;
reg   [31:0] empty_59_fu_510;
wire   [31:0] select_ln36_34_fu_2753_p3;
reg   [31:0] empty_60_fu_514;
wire   [31:0] select_ln36_33_fu_2745_p3;
reg   [31:0] empty_61_fu_518;
wire   [31:0] select_ln36_32_fu_2737_p3;
reg   [31:0] empty_62_fu_522;
wire   [31:0] select_ln36_31_fu_2729_p3;
reg   [31:0] empty_63_fu_526;
wire   [31:0] select_ln36_30_fu_2721_p3;
reg   [31:0] empty_64_fu_530;
wire   [31:0] select_ln36_29_fu_2713_p3;
reg   [31:0] empty_65_fu_534;
wire   [31:0] select_ln36_28_fu_2705_p3;
reg   [31:0] empty_66_fu_538;
wire   [31:0] select_ln36_27_fu_2697_p3;
reg   [31:0] empty_67_fu_542;
wire   [31:0] select_ln36_26_fu_2689_p3;
reg   [31:0] empty_68_fu_546;
wire   [31:0] select_ln36_25_fu_2681_p3;
reg   [31:0] empty_69_fu_550;
wire   [31:0] select_ln36_24_fu_2673_p3;
reg   [31:0] empty_70_fu_554;
wire   [31:0] select_ln36_23_fu_2665_p3;
reg   [31:0] empty_71_fu_558;
wire   [31:0] select_ln36_22_fu_2657_p3;
reg   [31:0] empty_72_fu_562;
wire   [31:0] select_ln36_21_fu_2649_p3;
reg   [31:0] empty_73_fu_566;
wire   [31:0] select_ln36_20_fu_2641_p3;
reg   [31:0] empty_74_fu_570;
wire   [31:0] select_ln36_19_fu_2633_p3;
reg   [31:0] empty_75_fu_574;
wire   [31:0] select_ln36_18_fu_2625_p3;
reg   [31:0] empty_76_fu_578;
wire   [31:0] select_ln36_17_fu_2617_p3;
reg   [31:0] empty_77_fu_582;
wire   [31:0] select_ln36_16_fu_2609_p3;
reg   [31:0] empty_78_fu_586;
wire   [31:0] select_ln36_15_fu_2601_p3;
reg   [31:0] empty_79_fu_590;
wire   [31:0] select_ln36_14_fu_2593_p3;
reg   [31:0] empty_80_fu_594;
wire   [31:0] select_ln36_13_fu_2585_p3;
reg   [31:0] empty_81_fu_598;
wire   [31:0] select_ln36_12_fu_2577_p3;
reg   [31:0] empty_82_fu_602;
wire   [31:0] select_ln36_11_fu_2569_p3;
reg   [31:0] empty_83_fu_606;
wire   [31:0] select_ln36_10_fu_2561_p3;
reg   [31:0] empty_84_fu_610;
wire   [31:0] select_ln36_9_fu_2553_p3;
reg   [31:0] empty_85_fu_614;
wire   [31:0] select_ln36_8_fu_2545_p3;
reg   [31:0] empty_86_fu_618;
wire   [31:0] select_ln36_7_fu_2537_p3;
reg   [31:0] empty_87_fu_622;
wire   [31:0] select_ln36_6_fu_2529_p3;
reg   [31:0] empty_88_fu_626;
wire   [31:0] select_ln36_5_fu_2521_p3;
reg   [31:0] empty_89_fu_630;
wire   [31:0] select_ln36_4_fu_2513_p3;
reg   [31:0] empty_90_fu_634;
wire   [31:0] select_ln36_3_fu_2505_p3;
reg   [31:0] empty_91_fu_638;
wire   [31:0] select_ln36_2_fu_2497_p3;
reg   [31:0] empty_92_fu_642;
wire   [31:0] select_ln36_1_fu_2489_p3;
reg   [31:0] empty_93_fu_646;
wire   [31:0] select_ln36_fu_2481_p3;
reg    ap_block_pp0_stage0_01001;
wire   [2:0] trunc_ln36_1_fu_2116_p1;
wire   [0:0] icmp_ln36_4_fu_2427_p2;
wire   [0:0] icmp_ln36_5_fu_2433_p2;
wire   [0:0] icmp_ln36_1_fu_2409_p2;
wire   [0:0] icmp_ln36_6_fu_2439_p2;
wire   [0:0] icmp_ln36_fu_2403_p2;
wire   [0:0] icmp_ln36_2_fu_2415_p2;
wire   [0:0] or_ln36_fu_2445_p2;
wire   [0:0] icmp_ln36_3_fu_2421_p2;
wire   [0:0] or_ln36_1_fu_2463_p2;
wire   [0:0] or_ln36_3_fu_2451_p2;
wire   [0:0] or_ln36_4_fu_2469_p2;
wire   [0:0] or_ln36_2_fu_2457_p2;
wire   [0:0] or_ln36_5_fu_2475_p2;
wire   [31:0] trunc_ln36_8_fu_2106_p4;
wire   [31:0] trunc_ln36_7_fu_2096_p4;
wire   [31:0] trunc_ln36_6_fu_2086_p4;
wire   [31:0] trunc_ln36_5_fu_2076_p4;
wire   [31:0] trunc_ln36_4_fu_2066_p4;
wire   [31:0] trunc_ln36_3_fu_2056_p4;
wire   [31:0] trunc_ln36_2_fu_2046_p4;
wire   [31:0] trunc_ln36_fu_2042_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

multiplier_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_31_fu_398 <= localA_6_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_31_fu_398 <= select_ln36_62_fu_2977_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_32_fu_402 <= localA_6_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_32_fu_402 <= select_ln36_61_fu_2969_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_33_fu_406 <= localA_6_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_33_fu_406 <= select_ln36_60_fu_2961_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_34_fu_410 <= localA_6_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_34_fu_410 <= select_ln36_59_fu_2953_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_35_fu_414 <= localA_6_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_35_fu_414 <= select_ln36_58_fu_2945_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_36_fu_418 <= localA_6_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_36_fu_418 <= select_ln36_57_fu_2937_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_37_fu_422 <= localA_6_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_37_fu_422 <= select_ln36_56_fu_2929_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_38_fu_426 <= localA_5_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_38_fu_426 <= select_ln36_55_fu_2921_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_39_fu_430 <= localA_5_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_39_fu_430 <= select_ln36_54_fu_2913_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_40_fu_434 <= localA_5_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_40_fu_434 <= select_ln36_53_fu_2905_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_41_fu_438 <= localA_5_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_41_fu_438 <= select_ln36_52_fu_2897_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_42_fu_442 <= localA_5_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_42_fu_442 <= select_ln36_51_fu_2889_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_43_fu_446 <= localA_5_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_43_fu_446 <= select_ln36_50_fu_2881_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_44_fu_450 <= localA_5_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_44_fu_450 <= select_ln36_49_fu_2873_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_45_fu_454 <= localA_5_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_45_fu_454 <= select_ln36_48_fu_2865_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_46_fu_458 <= localA_4_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_46_fu_458 <= select_ln36_47_fu_2857_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_47_fu_462 <= localA_4_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_47_fu_462 <= select_ln36_46_fu_2849_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_48_fu_466 <= localA_4_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_48_fu_466 <= select_ln36_45_fu_2841_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_49_fu_470 <= localA_4_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_49_fu_470 <= select_ln36_44_fu_2833_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_50_fu_474 <= localA_4_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_50_fu_474 <= select_ln36_43_fu_2825_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_51_fu_478 <= localA_4_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_51_fu_478 <= select_ln36_42_fu_2817_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_52_fu_482 <= localA_4_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_52_fu_482 <= select_ln36_41_fu_2809_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_53_fu_486 <= localA_4_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_53_fu_486 <= select_ln36_40_fu_2801_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_54_fu_490 <= localA_3_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_54_fu_490 <= select_ln36_39_fu_2793_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_55_fu_494 <= localA_3_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_55_fu_494 <= select_ln36_38_fu_2785_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_56_fu_498 <= localA_3_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_56_fu_498 <= select_ln36_37_fu_2777_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_57_fu_502 <= localA_3_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_57_fu_502 <= select_ln36_36_fu_2769_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_58_fu_506 <= localA_3_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_58_fu_506 <= select_ln36_35_fu_2761_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_59_fu_510 <= localA_3_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_59_fu_510 <= select_ln36_34_fu_2753_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_60_fu_514 <= localA_3_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_60_fu_514 <= select_ln36_33_fu_2745_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_61_fu_518 <= localA_3_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_61_fu_518 <= select_ln36_32_fu_2737_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_62_fu_522 <= localA_2_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_62_fu_522 <= select_ln36_31_fu_2729_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_63_fu_526 <= localA_2_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_63_fu_526 <= select_ln36_30_fu_2721_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_64_fu_530 <= localA_2_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_64_fu_530 <= select_ln36_29_fu_2713_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_65_fu_534 <= localA_2_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_65_fu_534 <= select_ln36_28_fu_2705_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_66_fu_538 <= localA_2_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_66_fu_538 <= select_ln36_27_fu_2697_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_67_fu_542 <= localA_2_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_67_fu_542 <= select_ln36_26_fu_2689_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_68_fu_546 <= localA_2_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_68_fu_546 <= select_ln36_25_fu_2681_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_69_fu_550 <= localA_2_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_69_fu_550 <= select_ln36_24_fu_2673_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_70_fu_554 <= localA_1_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_70_fu_554 <= select_ln36_23_fu_2665_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_71_fu_558 <= localA_1_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_71_fu_558 <= select_ln36_22_fu_2657_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_72_fu_562 <= localA_1_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_72_fu_562 <= select_ln36_21_fu_2649_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_73_fu_566 <= localA_1_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_73_fu_566 <= select_ln36_20_fu_2641_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_74_fu_570 <= localA_1_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_74_fu_570 <= select_ln36_19_fu_2633_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_75_fu_574 <= localA_1_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_75_fu_574 <= select_ln36_18_fu_2625_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_76_fu_578 <= localA_1_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_76_fu_578 <= select_ln36_17_fu_2617_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_77_fu_582 <= localA_1_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_77_fu_582 <= select_ln36_16_fu_2609_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_78_fu_586 <= localA_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_78_fu_586 <= select_ln36_15_fu_2601_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_79_fu_590 <= localA_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_79_fu_590 <= select_ln36_14_fu_2593_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_80_fu_594 <= localA_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_80_fu_594 <= select_ln36_13_fu_2585_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_81_fu_598 <= localA_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_81_fu_598 <= select_ln36_12_fu_2577_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_82_fu_602 <= localA_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_82_fu_602 <= select_ln36_11_fu_2569_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_83_fu_606 <= localA_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_83_fu_606 <= select_ln36_10_fu_2561_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_84_fu_610 <= localA_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_84_fu_610 <= select_ln36_9_fu_2553_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_85_fu_614 <= localA_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_85_fu_614 <= select_ln36_8_fu_2545_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_86_fu_618 <= localA_7_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_86_fu_618 <= select_ln36_7_fu_2537_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_87_fu_622 <= localA_7_load_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_87_fu_622 <= select_ln36_6_fu_2529_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_88_fu_626 <= localA_7_load_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_88_fu_626 <= select_ln36_5_fu_2521_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_89_fu_630 <= localA_7_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_89_fu_630 <= select_ln36_4_fu_2513_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_90_fu_634 <= localA_7_load_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_90_fu_634 <= select_ln36_3_fu_2505_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_91_fu_638 <= localA_7_load_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_91_fu_638 <= select_ln36_2_fu_2497_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_92_fu_642 <= localA_7_load_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_92_fu_642 <= select_ln36_1_fu_2489_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_93_fu_646 <= localA_7_load_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_93_fu_646 <= select_ln36_fu_2481_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_fu_394 <= localA_6_load;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_fu_394 <= select_ln36_63_fu_2985_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln31_fu_1972_p2 == 1'd0))) begin
            i_fu_390 <= add_ln31_fu_1978_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_390 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg2940_fu_386 <= 256'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            shiftreg2940_fu_386 <= {{ap_phi_mux_empty_96_phi_fu_1611_p4[511:256]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg2942_fu_382 <= 256'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            shiftreg2942_fu_382 <= {{ap_phi_mux_empty_95_phi_fu_1620_p4[511:256]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        empty_97_reg_4132_pp0_iter1_reg <= empty_97_reg_4132;
        i_1_reg_4122 <= ap_sig_allocacmp_i_1;
        i_1_reg_4122_pp0_iter1_reg <= i_1_reg_4122;
        icmp_ln31_reg_4128 <= icmp_ln31_fu_1972_p2;
        icmp_ln31_reg_4128_pp0_iter1_reg <= icmp_ln31_reg_4128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_fu_1972_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_97_reg_4132 <= empty_97_fu_1984_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op223_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem1_addr_read_reg_4136 <= m_axi_gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op224_read_state2 == 1'b1))) begin
        gmem2_addr_read_reg_4141 <= m_axi_gmem2_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln31_fu_1972_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_reg_4128_pp0_iter1_reg == 1'd0)) begin
        if ((empty_97_reg_4132_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_95_phi_fu_1620_p4 = shiftreg2942_cast_fu_2011_p1;
        end else if ((empty_97_reg_4132_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_95_phi_fu_1620_p4 = gmem2_addr_read_reg_4141;
        end else begin
            ap_phi_mux_empty_95_phi_fu_1620_p4 = ap_phi_reg_pp0_iter2_empty_95_reg_1617;
        end
    end else begin
        ap_phi_mux_empty_95_phi_fu_1620_p4 = ap_phi_reg_pp0_iter2_empty_95_reg_1617;
    end
end

always @ (*) begin
    if ((icmp_ln31_reg_4128_pp0_iter1_reg == 1'd0)) begin
        if ((empty_97_reg_4132_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_96_phi_fu_1611_p4 = shiftreg2940_cast_fu_2016_p1;
        end else if ((empty_97_reg_4132_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_96_phi_fu_1611_p4 = gmem1_addr_read_reg_4136;
        end else begin
            ap_phi_mux_empty_96_phi_fu_1611_p4 = ap_phi_reg_pp0_iter2_empty_96_reg_1608;
        end
    end else begin
        ap_phi_mux_empty_96_phi_fu_1611_p4 = ap_phi_reg_pp0_iter2_empty_96_reg_1608;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_390;
    end
end

always @ (*) begin
    if (((ap_predicate_op223_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op224_read_state2 == 1'b1))) begin
        gmem2_blk_n_R = m_axi_gmem2_RVALID;
    end else begin
        gmem2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_1_ce0 = 1'b1;
    end else begin
        localB_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_1_we0 = 1'b1;
    end else begin
        localB_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_2_ce0 = 1'b1;
    end else begin
        localB_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_2_we0 = 1'b1;
    end else begin
        localB_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_3_ce0 = 1'b1;
    end else begin
        localB_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_3_we0 = 1'b1;
    end else begin
        localB_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_4_ce0 = 1'b1;
    end else begin
        localB_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_4_we0 = 1'b1;
    end else begin
        localB_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_5_ce0 = 1'b1;
    end else begin
        localB_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_5_we0 = 1'b1;
    end else begin
        localB_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_6_ce0 = 1'b1;
    end else begin
        localB_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_6_we0 = 1'b1;
    end else begin
        localB_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_7_ce0 = 1'b1;
    end else begin
        localB_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_7_we0 = 1'b1;
    end else begin
        localB_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_ce0 = 1'b1;
    end else begin
        localB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_we0 = 1'b1;
    end else begin
        localB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op223_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem1_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op224_read_state2 == 1'b1))) begin
        m_axi_gmem2_RREADY = 1'b1;
    end else begin
        m_axi_gmem2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out10_ap_vld = 1'b1;
    end else begin
        p_out10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out11_ap_vld = 1'b1;
    end else begin
        p_out11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out12_ap_vld = 1'b1;
    end else begin
        p_out12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out13_ap_vld = 1'b1;
    end else begin
        p_out13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out14_ap_vld = 1'b1;
    end else begin
        p_out14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out15_ap_vld = 1'b1;
    end else begin
        p_out15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out16_ap_vld = 1'b1;
    end else begin
        p_out16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out17_ap_vld = 1'b1;
    end else begin
        p_out17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out18_ap_vld = 1'b1;
    end else begin
        p_out18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out19_ap_vld = 1'b1;
    end else begin
        p_out19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out20_ap_vld = 1'b1;
    end else begin
        p_out20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out21_ap_vld = 1'b1;
    end else begin
        p_out21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out22_ap_vld = 1'b1;
    end else begin
        p_out22_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out23_ap_vld = 1'b1;
    end else begin
        p_out23_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out24_ap_vld = 1'b1;
    end else begin
        p_out24_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out25_ap_vld = 1'b1;
    end else begin
        p_out25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out26_ap_vld = 1'b1;
    end else begin
        p_out26_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out27_ap_vld = 1'b1;
    end else begin
        p_out27_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out28_ap_vld = 1'b1;
    end else begin
        p_out28_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out29_ap_vld = 1'b1;
    end else begin
        p_out29_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out2_ap_vld = 1'b1;
    end else begin
        p_out2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out30_ap_vld = 1'b1;
    end else begin
        p_out30_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out31_ap_vld = 1'b1;
    end else begin
        p_out31_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out32_ap_vld = 1'b1;
    end else begin
        p_out32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out33_ap_vld = 1'b1;
    end else begin
        p_out33_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out34_ap_vld = 1'b1;
    end else begin
        p_out34_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out35_ap_vld = 1'b1;
    end else begin
        p_out35_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out36_ap_vld = 1'b1;
    end else begin
        p_out36_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out37_ap_vld = 1'b1;
    end else begin
        p_out37_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out38_ap_vld = 1'b1;
    end else begin
        p_out38_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out39_ap_vld = 1'b1;
    end else begin
        p_out39_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out3_ap_vld = 1'b1;
    end else begin
        p_out3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out40_ap_vld = 1'b1;
    end else begin
        p_out40_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out41_ap_vld = 1'b1;
    end else begin
        p_out41_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out42_ap_vld = 1'b1;
    end else begin
        p_out42_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out43_ap_vld = 1'b1;
    end else begin
        p_out43_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out44_ap_vld = 1'b1;
    end else begin
        p_out44_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out45_ap_vld = 1'b1;
    end else begin
        p_out45_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out46_ap_vld = 1'b1;
    end else begin
        p_out46_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out47_ap_vld = 1'b1;
    end else begin
        p_out47_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out48_ap_vld = 1'b1;
    end else begin
        p_out48_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out49_ap_vld = 1'b1;
    end else begin
        p_out49_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out4_ap_vld = 1'b1;
    end else begin
        p_out4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out50_ap_vld = 1'b1;
    end else begin
        p_out50_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out51_ap_vld = 1'b1;
    end else begin
        p_out51_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out52_ap_vld = 1'b1;
    end else begin
        p_out52_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out53_ap_vld = 1'b1;
    end else begin
        p_out53_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out54_ap_vld = 1'b1;
    end else begin
        p_out54_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out55_ap_vld = 1'b1;
    end else begin
        p_out55_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out56_ap_vld = 1'b1;
    end else begin
        p_out56_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out57_ap_vld = 1'b1;
    end else begin
        p_out57_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out58_ap_vld = 1'b1;
    end else begin
        p_out58_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out59_ap_vld = 1'b1;
    end else begin
        p_out59_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out5_ap_vld = 1'b1;
    end else begin
        p_out5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out60_ap_vld = 1'b1;
    end else begin
        p_out60_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out61_ap_vld = 1'b1;
    end else begin
        p_out61_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out62_ap_vld = 1'b1;
    end else begin
        p_out62_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out63_ap_vld = 1'b1;
    end else begin
        p_out63_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out6_ap_vld = 1'b1;
    end else begin
        p_out6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out7_ap_vld = 1'b1;
    end else begin
        p_out7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out8_ap_vld = 1'b1;
    end else begin
        p_out8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out9_ap_vld = 1'b1;
    end else begin
        p_out9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_4128 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_1978_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op223_read_state2 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op224_read_state2 == 1'b1) & (m_axi_gmem2_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op223_read_state2 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op224_read_state2 == 1'b1) & (m_axi_gmem2_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op223_read_state2 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op224_read_state2 == 1'b1) & (m_axi_gmem2_RVALID == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op223_read_state2 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op224_read_state2 == 1'b1) & (m_axi_gmem2_RVALID == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_empty_95_reg_1617 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_96_reg_1608 = 'bx;

always @ (*) begin
    ap_predicate_op223_read_state2 = ((empty_97_reg_4132 == 1'd0) & (icmp_ln31_reg_4128 == 1'd0));
end

always @ (*) begin
    ap_predicate_op224_read_state2 = ((empty_97_reg_4132 == 1'd0) & (icmp_ln31_reg_4128 == 1'd0));
end

assign empty_97_fu_1984_p1 = ap_sig_allocacmp_i_1[0:0];

assign i_cast295_fu_2021_p1 = i_1_reg_4122_pp0_iter1_reg;

assign icmp_ln31_fu_1972_p2 = ((ap_sig_allocacmp_i_1 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln36_1_fu_2409_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln36_2_fu_2415_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln36_3_fu_2421_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln36_4_fu_2427_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln36_5_fu_2433_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln36_6_fu_2439_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_2403_p2 = ((trunc_ln36_1_fu_2116_p1 == 3'd0) ? 1'b1 : 1'b0);

assign localB_1_address0 = i_cast295_fu_2021_p1;

assign localB_1_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[63:32]}};

assign localB_2_address0 = i_cast295_fu_2021_p1;

assign localB_2_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[95:64]}};

assign localB_3_address0 = i_cast295_fu_2021_p1;

assign localB_3_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[127:96]}};

assign localB_4_address0 = i_cast295_fu_2021_p1;

assign localB_4_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[159:128]}};

assign localB_5_address0 = i_cast295_fu_2021_p1;

assign localB_5_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[191:160]}};

assign localB_6_address0 = i_cast295_fu_2021_p1;

assign localB_6_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[223:192]}};

assign localB_7_address0 = i_cast295_fu_2021_p1;

assign localB_7_d0 = {{ap_phi_mux_empty_95_phi_fu_1620_p4[255:224]}};

assign localB_address0 = i_cast295_fu_2021_p1;

assign localB_d0 = ap_phi_mux_empty_95_phi_fu_1620_p4[31:0];

assign m_axi_gmem1_ARADDR = 64'd0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_ARVALID = 1'b0;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_WDATA = 512'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 64'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign m_axi_gmem2_ARADDR = 64'd0;

assign m_axi_gmem2_ARBURST = 2'd0;

assign m_axi_gmem2_ARCACHE = 4'd0;

assign m_axi_gmem2_ARID = 1'd0;

assign m_axi_gmem2_ARLEN = 32'd0;

assign m_axi_gmem2_ARLOCK = 2'd0;

assign m_axi_gmem2_ARPROT = 3'd0;

assign m_axi_gmem2_ARQOS = 4'd0;

assign m_axi_gmem2_ARREGION = 4'd0;

assign m_axi_gmem2_ARSIZE = 3'd0;

assign m_axi_gmem2_ARUSER = 1'd0;

assign m_axi_gmem2_ARVALID = 1'b0;

assign m_axi_gmem2_AWADDR = 64'd0;

assign m_axi_gmem2_AWBURST = 2'd0;

assign m_axi_gmem2_AWCACHE = 4'd0;

assign m_axi_gmem2_AWID = 1'd0;

assign m_axi_gmem2_AWLEN = 32'd0;

assign m_axi_gmem2_AWLOCK = 2'd0;

assign m_axi_gmem2_AWPROT = 3'd0;

assign m_axi_gmem2_AWQOS = 4'd0;

assign m_axi_gmem2_AWREGION = 4'd0;

assign m_axi_gmem2_AWSIZE = 3'd0;

assign m_axi_gmem2_AWUSER = 1'd0;

assign m_axi_gmem2_AWVALID = 1'b0;

assign m_axi_gmem2_BREADY = 1'b0;

assign m_axi_gmem2_WDATA = 512'd0;

assign m_axi_gmem2_WID = 1'd0;

assign m_axi_gmem2_WLAST = 1'b0;

assign m_axi_gmem2_WSTRB = 64'd0;

assign m_axi_gmem2_WUSER = 1'd0;

assign m_axi_gmem2_WVALID = 1'b0;

assign or_ln36_1_fu_2463_p2 = (or_ln36_fu_2445_p2 | icmp_ln36_3_fu_2421_p2);

assign or_ln36_2_fu_2457_p2 = (icmp_ln36_fu_2403_p2 | icmp_ln36_2_fu_2415_p2);

assign or_ln36_3_fu_2451_p2 = (icmp_ln36_6_fu_2439_p2 | icmp_ln36_1_fu_2409_p2);

assign or_ln36_4_fu_2469_p2 = (or_ln36_3_fu_2451_p2 | or_ln36_1_fu_2463_p2);

assign or_ln36_5_fu_2475_p2 = (or_ln36_4_fu_2469_p2 | or_ln36_2_fu_2457_p2);

assign or_ln36_fu_2445_p2 = (icmp_ln36_5_fu_2433_p2 | icmp_ln36_4_fu_2427_p2);

assign p_out = empty_93_fu_646;

assign p_out1 = empty_92_fu_642;

assign p_out10 = empty_83_fu_606;

assign p_out11 = empty_82_fu_602;

assign p_out12 = empty_81_fu_598;

assign p_out13 = empty_80_fu_594;

assign p_out14 = empty_79_fu_590;

assign p_out15 = empty_78_fu_586;

assign p_out16 = empty_77_fu_582;

assign p_out17 = empty_76_fu_578;

assign p_out18 = empty_75_fu_574;

assign p_out19 = empty_74_fu_570;

assign p_out2 = empty_91_fu_638;

assign p_out20 = empty_73_fu_566;

assign p_out21 = empty_72_fu_562;

assign p_out22 = empty_71_fu_558;

assign p_out23 = empty_70_fu_554;

assign p_out24 = empty_69_fu_550;

assign p_out25 = empty_68_fu_546;

assign p_out26 = empty_67_fu_542;

assign p_out27 = empty_66_fu_538;

assign p_out28 = empty_65_fu_534;

assign p_out29 = empty_64_fu_530;

assign p_out3 = empty_90_fu_634;

assign p_out30 = empty_63_fu_526;

assign p_out31 = empty_62_fu_522;

assign p_out32 = empty_61_fu_518;

assign p_out33 = empty_60_fu_514;

assign p_out34 = empty_59_fu_510;

assign p_out35 = empty_58_fu_506;

assign p_out36 = empty_57_fu_502;

assign p_out37 = empty_56_fu_498;

assign p_out38 = empty_55_fu_494;

assign p_out39 = empty_54_fu_490;

assign p_out4 = empty_89_fu_630;

assign p_out40 = empty_53_fu_486;

assign p_out41 = empty_52_fu_482;

assign p_out42 = empty_51_fu_478;

assign p_out43 = empty_50_fu_474;

assign p_out44 = empty_49_fu_470;

assign p_out45 = empty_48_fu_466;

assign p_out46 = empty_47_fu_462;

assign p_out47 = empty_46_fu_458;

assign p_out48 = empty_45_fu_454;

assign p_out49 = empty_44_fu_450;

assign p_out5 = empty_88_fu_626;

assign p_out50 = empty_43_fu_446;

assign p_out51 = empty_42_fu_442;

assign p_out52 = empty_41_fu_438;

assign p_out53 = empty_40_fu_434;

assign p_out54 = empty_39_fu_430;

assign p_out55 = empty_38_fu_426;

assign p_out56 = empty_37_fu_422;

assign p_out57 = empty_36_fu_418;

assign p_out58 = empty_35_fu_414;

assign p_out59 = empty_34_fu_410;

assign p_out6 = empty_87_fu_622;

assign p_out60 = empty_33_fu_406;

assign p_out61 = empty_32_fu_402;

assign p_out62 = empty_31_fu_398;

assign p_out63 = empty_fu_394;

assign p_out7 = empty_86_fu_618;

assign p_out8 = empty_85_fu_614;

assign p_out9 = empty_84_fu_610;

assign select_ln36_10_fu_2561_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_83_fu_606);

assign select_ln36_11_fu_2569_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_82_fu_602);

assign select_ln36_12_fu_2577_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_81_fu_598);

assign select_ln36_13_fu_2585_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_80_fu_594);

assign select_ln36_14_fu_2593_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_79_fu_590);

assign select_ln36_15_fu_2601_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_78_fu_586);

assign select_ln36_16_fu_2609_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_77_fu_582);

assign select_ln36_17_fu_2617_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_76_fu_578);

assign select_ln36_18_fu_2625_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_75_fu_574);

assign select_ln36_19_fu_2633_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_74_fu_570);

assign select_ln36_1_fu_2489_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_92_fu_642 : trunc_ln36_7_fu_2096_p4);

assign select_ln36_20_fu_2641_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_73_fu_566);

assign select_ln36_21_fu_2649_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_72_fu_562);

assign select_ln36_22_fu_2657_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_71_fu_558);

assign select_ln36_23_fu_2665_p3 = ((icmp_ln36_1_fu_2409_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_70_fu_554);

assign select_ln36_24_fu_2673_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_69_fu_550);

assign select_ln36_25_fu_2681_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_68_fu_546);

assign select_ln36_26_fu_2689_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_67_fu_542);

assign select_ln36_27_fu_2697_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_66_fu_538);

assign select_ln36_28_fu_2705_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_65_fu_534);

assign select_ln36_29_fu_2713_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_64_fu_530);

assign select_ln36_2_fu_2497_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_91_fu_638 : trunc_ln36_6_fu_2086_p4);

assign select_ln36_30_fu_2721_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_63_fu_526);

assign select_ln36_31_fu_2729_p3 = ((icmp_ln36_2_fu_2415_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_62_fu_522);

assign select_ln36_32_fu_2737_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_61_fu_518);

assign select_ln36_33_fu_2745_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_60_fu_514);

assign select_ln36_34_fu_2753_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_59_fu_510);

assign select_ln36_35_fu_2761_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_58_fu_506);

assign select_ln36_36_fu_2769_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_57_fu_502);

assign select_ln36_37_fu_2777_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_56_fu_498);

assign select_ln36_38_fu_2785_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_55_fu_494);

assign select_ln36_39_fu_2793_p3 = ((icmp_ln36_3_fu_2421_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_54_fu_490);

assign select_ln36_3_fu_2505_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_90_fu_634 : trunc_ln36_5_fu_2076_p4);

assign select_ln36_40_fu_2801_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_53_fu_486);

assign select_ln36_41_fu_2809_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_52_fu_482);

assign select_ln36_42_fu_2817_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_51_fu_478);

assign select_ln36_43_fu_2825_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_50_fu_474);

assign select_ln36_44_fu_2833_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_49_fu_470);

assign select_ln36_45_fu_2841_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_48_fu_466);

assign select_ln36_46_fu_2849_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_47_fu_462);

assign select_ln36_47_fu_2857_p3 = ((icmp_ln36_4_fu_2427_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_46_fu_458);

assign select_ln36_48_fu_2865_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_45_fu_454);

assign select_ln36_49_fu_2873_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_44_fu_450);

assign select_ln36_4_fu_2513_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_89_fu_630 : trunc_ln36_4_fu_2066_p4);

assign select_ln36_50_fu_2881_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_43_fu_446);

assign select_ln36_51_fu_2889_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_42_fu_442);

assign select_ln36_52_fu_2897_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_41_fu_438);

assign select_ln36_53_fu_2905_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_40_fu_434);

assign select_ln36_54_fu_2913_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_39_fu_430);

assign select_ln36_55_fu_2921_p3 = ((icmp_ln36_5_fu_2433_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_38_fu_426);

assign select_ln36_56_fu_2929_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_37_fu_422);

assign select_ln36_57_fu_2937_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_36_fu_418);

assign select_ln36_58_fu_2945_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_6_fu_2086_p4 : empty_35_fu_414);

assign select_ln36_59_fu_2953_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_5_fu_2076_p4 : empty_34_fu_410);

assign select_ln36_5_fu_2521_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_88_fu_626 : trunc_ln36_3_fu_2056_p4);

assign select_ln36_60_fu_2961_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_4_fu_2066_p4 : empty_33_fu_406);

assign select_ln36_61_fu_2969_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_3_fu_2056_p4 : empty_32_fu_402);

assign select_ln36_62_fu_2977_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_2_fu_2046_p4 : empty_31_fu_398);

assign select_ln36_63_fu_2985_p3 = ((icmp_ln36_6_fu_2439_p2[0:0] == 1'b1) ? trunc_ln36_fu_2042_p1 : empty_fu_394);

assign select_ln36_6_fu_2529_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_87_fu_622 : trunc_ln36_2_fu_2046_p4);

assign select_ln36_7_fu_2537_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_86_fu_618 : trunc_ln36_fu_2042_p1);

assign select_ln36_8_fu_2545_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_8_fu_2106_p4 : empty_85_fu_614);

assign select_ln36_9_fu_2553_p3 = ((icmp_ln36_fu_2403_p2[0:0] == 1'b1) ? trunc_ln36_7_fu_2096_p4 : empty_84_fu_610);

assign select_ln36_fu_2481_p3 = ((or_ln36_5_fu_2475_p2[0:0] == 1'b1) ? empty_93_fu_646 : trunc_ln36_8_fu_2106_p4);

assign shiftreg2940_cast_fu_2016_p1 = shiftreg2940_fu_386;

assign shiftreg2942_cast_fu_2011_p1 = shiftreg2942_fu_382;

assign trunc_ln36_1_fu_2116_p1 = i_1_reg_4122_pp0_iter1_reg[2:0];

assign trunc_ln36_2_fu_2046_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[63:32]}};

assign trunc_ln36_3_fu_2056_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[95:64]}};

assign trunc_ln36_4_fu_2066_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[127:96]}};

assign trunc_ln36_5_fu_2076_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[159:128]}};

assign trunc_ln36_6_fu_2086_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[191:160]}};

assign trunc_ln36_7_fu_2096_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[223:192]}};

assign trunc_ln36_8_fu_2106_p4 = {{ap_phi_mux_empty_96_phi_fu_1611_p4[255:224]}};

assign trunc_ln36_fu_2042_p1 = ap_phi_mux_empty_96_phi_fu_1611_p4[31:0];

endmodule //multiplier_multiplier_Pipeline_VITIS_LOOP_31_1
