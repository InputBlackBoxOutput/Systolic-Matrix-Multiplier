// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module multiplier_multiplier_Pipeline_VITIS_LOOP_142_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RFIFONUM,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        sext_ln142,
        sysarrayC_320_reload,
        sysarrayC_328_reload,
        sysarrayC_336_reload,
        sysarrayC_344_reload,
        sysarrayC_352_reload,
        sysarrayC_360_reload,
        sysarrayC_368_reload,
        sysarrayC_376_reload,
        sysarrayC_321_reload,
        sysarrayC_329_reload,
        sysarrayC_337_reload,
        sysarrayC_345_reload,
        sysarrayC_353_reload,
        sysarrayC_361_reload,
        sysarrayC_369_reload,
        sysarrayC_377_reload,
        sysarrayC_322_reload,
        sysarrayC_330_reload,
        sysarrayC_338_reload,
        sysarrayC_346_reload,
        sysarrayC_354_reload,
        sysarrayC_362_reload,
        sysarrayC_370_reload,
        sysarrayC_378_reload,
        sysarrayC_323_reload,
        sysarrayC_331_reload,
        sysarrayC_339_reload,
        sysarrayC_347_reload,
        sysarrayC_355_reload,
        sysarrayC_363_reload,
        sysarrayC_371_reload,
        sysarrayC_379_reload,
        sysarrayC_324_reload,
        sysarrayC_332_reload,
        sysarrayC_340_reload,
        sysarrayC_348_reload,
        sysarrayC_356_reload,
        sysarrayC_364_reload,
        sysarrayC_372_reload,
        sysarrayC_380_reload,
        sysarrayC_325_reload,
        sysarrayC_333_reload,
        sysarrayC_341_reload,
        sysarrayC_349_reload,
        sysarrayC_357_reload,
        sysarrayC_365_reload,
        sysarrayC_373_reload,
        sysarrayC_381_reload,
        sysarrayC_326_reload,
        sysarrayC_334_reload,
        sysarrayC_342_reload,
        sysarrayC_350_reload,
        sysarrayC_358_reload,
        sysarrayC_366_reload,
        sysarrayC_374_reload,
        sysarrayC_382_reload,
        sysarrayC_327_reload,
        sysarrayC_335_reload,
        sysarrayC_343_reload,
        sysarrayC_351_reload,
        sysarrayC_359_reload,
        sysarrayC_367_reload,
        sysarrayC_375_reload,
        sysarrayC_383_reload
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [63:0] m_axi_gmem3_AWADDR;
output  [0:0] m_axi_gmem3_AWID;
output  [31:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [0:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [511:0] m_axi_gmem3_WDATA;
output  [63:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [0:0] m_axi_gmem3_WID;
output  [0:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [63:0] m_axi_gmem3_ARADDR;
output  [0:0] m_axi_gmem3_ARID;
output  [31:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [0:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [511:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [0:0] m_axi_gmem3_RID;
input  [8:0] m_axi_gmem3_RFIFONUM;
input  [0:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [0:0] m_axi_gmem3_BID;
input  [0:0] m_axi_gmem3_BUSER;
input  [57:0] sext_ln142;
input  [31:0] sysarrayC_320_reload;
input  [31:0] sysarrayC_328_reload;
input  [31:0] sysarrayC_336_reload;
input  [31:0] sysarrayC_344_reload;
input  [31:0] sysarrayC_352_reload;
input  [31:0] sysarrayC_360_reload;
input  [31:0] sysarrayC_368_reload;
input  [31:0] sysarrayC_376_reload;
input  [31:0] sysarrayC_321_reload;
input  [31:0] sysarrayC_329_reload;
input  [31:0] sysarrayC_337_reload;
input  [31:0] sysarrayC_345_reload;
input  [31:0] sysarrayC_353_reload;
input  [31:0] sysarrayC_361_reload;
input  [31:0] sysarrayC_369_reload;
input  [31:0] sysarrayC_377_reload;
input  [31:0] sysarrayC_322_reload;
input  [31:0] sysarrayC_330_reload;
input  [31:0] sysarrayC_338_reload;
input  [31:0] sysarrayC_346_reload;
input  [31:0] sysarrayC_354_reload;
input  [31:0] sysarrayC_362_reload;
input  [31:0] sysarrayC_370_reload;
input  [31:0] sysarrayC_378_reload;
input  [31:0] sysarrayC_323_reload;
input  [31:0] sysarrayC_331_reload;
input  [31:0] sysarrayC_339_reload;
input  [31:0] sysarrayC_347_reload;
input  [31:0] sysarrayC_355_reload;
input  [31:0] sysarrayC_363_reload;
input  [31:0] sysarrayC_371_reload;
input  [31:0] sysarrayC_379_reload;
input  [31:0] sysarrayC_324_reload;
input  [31:0] sysarrayC_332_reload;
input  [31:0] sysarrayC_340_reload;
input  [31:0] sysarrayC_348_reload;
input  [31:0] sysarrayC_356_reload;
input  [31:0] sysarrayC_364_reload;
input  [31:0] sysarrayC_372_reload;
input  [31:0] sysarrayC_380_reload;
input  [31:0] sysarrayC_325_reload;
input  [31:0] sysarrayC_333_reload;
input  [31:0] sysarrayC_341_reload;
input  [31:0] sysarrayC_349_reload;
input  [31:0] sysarrayC_357_reload;
input  [31:0] sysarrayC_365_reload;
input  [31:0] sysarrayC_373_reload;
input  [31:0] sysarrayC_381_reload;
input  [31:0] sysarrayC_326_reload;
input  [31:0] sysarrayC_334_reload;
input  [31:0] sysarrayC_342_reload;
input  [31:0] sysarrayC_350_reload;
input  [31:0] sysarrayC_358_reload;
input  [31:0] sysarrayC_366_reload;
input  [31:0] sysarrayC_374_reload;
input  [31:0] sysarrayC_382_reload;
input  [31:0] sysarrayC_327_reload;
input  [31:0] sysarrayC_335_reload;
input  [31:0] sysarrayC_343_reload;
input  [31:0] sysarrayC_351_reload;
input  [31:0] sysarrayC_359_reload;
input  [31:0] sysarrayC_367_reload;
input  [31:0] sysarrayC_375_reload;
input  [31:0] sysarrayC_383_reload;

reg ap_idle;
reg m_axi_gmem3_WVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] empty_98_reg_882;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln142_fu_617_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem3_blk_n_W;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] empty_98_fu_629_p1;
wire   [31:0] tmp_fu_637_p10;
reg   [31:0] tmp_reg_887;
wire   [31:0] tmp_1_fu_659_p10;
reg   [31:0] tmp_1_reg_893;
wire   [31:0] tmp_2_fu_681_p10;
reg   [31:0] tmp_2_reg_899;
wire   [31:0] tmp_3_fu_703_p10;
reg   [31:0] tmp_3_reg_905;
wire   [31:0] tmp_4_fu_725_p10;
reg   [31:0] tmp_4_reg_911;
wire   [31:0] tmp_5_fu_747_p10;
reg   [31:0] tmp_5_reg_917;
wire   [31:0] tmp_6_fu_769_p10;
reg   [31:0] tmp_6_reg_923;
wire   [31:0] tmp_7_fu_791_p10;
reg   [31:0] tmp_7_reg_929;
wire    ap_block_pp0_stage0_01001;
reg   [255:0] phi_ln144_fu_188;
wire   [255:0] select_ln142_fu_848_p3;
wire    ap_loop_init;
reg   [3:0] i_1_fu_192;
wire   [3:0] add_ln142_fu_623_p2;
reg   [3:0] ap_sig_allocacmp_i;
wire   [2:0] trunc_ln147_fu_633_p1;
wire   [255:0] or_ln144_6_fu_821_p9;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U686(
    .din0(sysarrayC_320_reload),
    .din1(sysarrayC_328_reload),
    .din2(sysarrayC_336_reload),
    .din3(sysarrayC_344_reload),
    .din4(sysarrayC_352_reload),
    .din5(sysarrayC_360_reload),
    .din6(sysarrayC_368_reload),
    .din7(sysarrayC_376_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_fu_637_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U687(
    .din0(sysarrayC_321_reload),
    .din1(sysarrayC_329_reload),
    .din2(sysarrayC_337_reload),
    .din3(sysarrayC_345_reload),
    .din4(sysarrayC_353_reload),
    .din5(sysarrayC_361_reload),
    .din6(sysarrayC_369_reload),
    .din7(sysarrayC_377_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_1_fu_659_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U688(
    .din0(sysarrayC_322_reload),
    .din1(sysarrayC_330_reload),
    .din2(sysarrayC_338_reload),
    .din3(sysarrayC_346_reload),
    .din4(sysarrayC_354_reload),
    .din5(sysarrayC_362_reload),
    .din6(sysarrayC_370_reload),
    .din7(sysarrayC_378_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_2_fu_681_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U689(
    .din0(sysarrayC_323_reload),
    .din1(sysarrayC_331_reload),
    .din2(sysarrayC_339_reload),
    .din3(sysarrayC_347_reload),
    .din4(sysarrayC_355_reload),
    .din5(sysarrayC_363_reload),
    .din6(sysarrayC_371_reload),
    .din7(sysarrayC_379_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_3_fu_703_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U690(
    .din0(sysarrayC_324_reload),
    .din1(sysarrayC_332_reload),
    .din2(sysarrayC_340_reload),
    .din3(sysarrayC_348_reload),
    .din4(sysarrayC_356_reload),
    .din5(sysarrayC_364_reload),
    .din6(sysarrayC_372_reload),
    .din7(sysarrayC_380_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_4_fu_725_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U691(
    .din0(sysarrayC_325_reload),
    .din1(sysarrayC_333_reload),
    .din2(sysarrayC_341_reload),
    .din3(sysarrayC_349_reload),
    .din4(sysarrayC_357_reload),
    .din5(sysarrayC_365_reload),
    .din6(sysarrayC_373_reload),
    .din7(sysarrayC_381_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_5_fu_747_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U692(
    .din0(sysarrayC_326_reload),
    .din1(sysarrayC_334_reload),
    .din2(sysarrayC_342_reload),
    .din3(sysarrayC_350_reload),
    .din4(sysarrayC_358_reload),
    .din5(sysarrayC_366_reload),
    .din6(sysarrayC_374_reload),
    .din7(sysarrayC_382_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_6_fu_769_p10)
);

multiplier_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U693(
    .din0(sysarrayC_327_reload),
    .din1(sysarrayC_335_reload),
    .din2(sysarrayC_343_reload),
    .din3(sysarrayC_351_reload),
    .din4(sysarrayC_359_reload),
    .din5(sysarrayC_367_reload),
    .din6(sysarrayC_375_reload),
    .din7(sysarrayC_383_reload),
    .din8(trunc_ln147_fu_633_p1),
    .dout(tmp_7_fu_791_p10)
);

multiplier_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln142_fu_617_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_192 <= add_ln142_fu_623_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_192 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_ln144_fu_188 <= 256'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_ln144_fu_188 <= select_ln142_fu_848_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln142_fu_617_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_98_reg_882 <= empty_98_fu_629_p1;
        tmp_1_reg_893 <= tmp_1_fu_659_p10;
        tmp_2_reg_899 <= tmp_2_fu_681_p10;
        tmp_3_reg_905 <= tmp_3_fu_703_p10;
        tmp_4_reg_911 <= tmp_4_fu_725_p10;
        tmp_5_reg_917 <= tmp_5_fu_747_p10;
        tmp_6_reg_923 <= tmp_6_fu_769_p10;
        tmp_7_reg_929 <= tmp_7_fu_791_p10;
        tmp_reg_887 <= tmp_fu_637_p10;
    end
end

always @ (*) begin
    if (((icmp_ln142_fu_617_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (empty_98_reg_882 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem3_blk_n_W = m_axi_gmem3_WREADY;
    end else begin
        gmem3_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_98_reg_882 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem3_WVALID = 1'b1;
    end else begin
        m_axi_gmem3_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln142_fu_623_p2 = (ap_sig_allocacmp_i + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((empty_98_reg_882 == 1'd1) & (m_axi_gmem3_WREADY == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_98_fu_629_p1 = ap_sig_allocacmp_i[0:0];

assign icmp_ln142_fu_617_p2 = ((ap_sig_allocacmp_i == 4'd8) ? 1'b1 : 1'b0);

assign m_axi_gmem3_ARADDR = 64'd0;

assign m_axi_gmem3_ARBURST = 2'd0;

assign m_axi_gmem3_ARCACHE = 4'd0;

assign m_axi_gmem3_ARID = 1'd0;

assign m_axi_gmem3_ARLEN = 32'd0;

assign m_axi_gmem3_ARLOCK = 2'd0;

assign m_axi_gmem3_ARPROT = 3'd0;

assign m_axi_gmem3_ARQOS = 4'd0;

assign m_axi_gmem3_ARREGION = 4'd0;

assign m_axi_gmem3_ARSIZE = 3'd0;

assign m_axi_gmem3_ARUSER = 1'd0;

assign m_axi_gmem3_ARVALID = 1'b0;

assign m_axi_gmem3_AWADDR = 64'd0;

assign m_axi_gmem3_AWBURST = 2'd0;

assign m_axi_gmem3_AWCACHE = 4'd0;

assign m_axi_gmem3_AWID = 1'd0;

assign m_axi_gmem3_AWLEN = 32'd0;

assign m_axi_gmem3_AWLOCK = 2'd0;

assign m_axi_gmem3_AWPROT = 3'd0;

assign m_axi_gmem3_AWQOS = 4'd0;

assign m_axi_gmem3_AWREGION = 4'd0;

assign m_axi_gmem3_AWSIZE = 3'd0;

assign m_axi_gmem3_AWUSER = 1'd0;

assign m_axi_gmem3_AWVALID = 1'b0;

assign m_axi_gmem3_BREADY = 1'b0;

assign m_axi_gmem3_RREADY = 1'b0;

assign m_axi_gmem3_WDATA = {{{{{{{{{tmp_7_reg_929}, {tmp_6_reg_923}}, {tmp_5_reg_917}}, {tmp_4_reg_911}}, {tmp_3_reg_905}}, {tmp_2_reg_899}}, {tmp_1_reg_893}}, {tmp_reg_887}}, {phi_ln144_fu_188}};

assign m_axi_gmem3_WID = 1'd0;

assign m_axi_gmem3_WLAST = 1'b0;

assign m_axi_gmem3_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem3_WUSER = 1'd0;

assign or_ln144_6_fu_821_p9 = {{{{{{{{tmp_7_reg_929}, {tmp_6_reg_923}}, {tmp_5_reg_917}}, {tmp_4_reg_911}}, {tmp_3_reg_905}}, {tmp_2_reg_899}}, {tmp_1_reg_893}}, {tmp_reg_887}};

assign select_ln142_fu_848_p3 = ((empty_98_reg_882[0:0] == 1'b1) ? 256'd0 : or_ln144_6_fu_821_p9);

assign trunc_ln147_fu_633_p1 = ap_sig_allocacmp_i[2:0];

endmodule //multiplier_multiplier_Pipeline_VITIS_LOOP_142_3
